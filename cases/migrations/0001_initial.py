# Generated by Django 3.2.3 on 2021-06-30 15:34

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(choices=[('car', 'Car alarm'), ('diy', 'DIY'), ('dog', 'Dog barking'), ('alarm', 'House / intruder alarm'), ('music', 'Music'), ('road', 'Noise on the road'), ('shouting', 'Shouting'), ('tv', 'TV'), ('other', 'Other')], max_length=10)),
                ('kind_other', models.CharField(blank=True, max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('radius', models.IntegerField(blank=True, null=True)),
                ('uprn', models.CharField(blank=True, max_length=20)),
                ('where', models.CharField(choices=[('business', 'A shop, bar, nightclub, building site or other commercial premises'), ('residence', 'A house, flat, park or street')], max_length=9)),
                ('estate', models.CharField(choices=[('y', 'Yes'), ('n', 'No'), ('?', 'Don’t know')], max_length=1)),
                ('assigned', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignations', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_case_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('happening_now', models.BooleanField()),
                ('happening_pattern', models.BooleanField()),
                ('happening_days', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')]), blank=True, null=True, size=7)),
                ('happening_times', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('morning', 'Morning (6am – noon)'), ('daytime', 'Daytime (noon – 6pm)'), ('evening', 'Evening (6pm – 11pm)'), ('night', 'Night time (11pm – 6am)')], max_length=7), blank=True, null=True, size=4)),
                ('happening_description', models.TextField(blank=True)),
                ('more_details', models.TextField(blank=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='cases.case')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_complaint_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
